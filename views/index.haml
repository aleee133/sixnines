- # (The MIT License)
- #
- # Copyright (c) 2017-2025 Yegor Bugayenko
- #
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- #
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- #
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%p
  SixNines is a 24x7 monitor of your website
  availability. Just login, add one of your endpoints,
  and in a few minutes you get a detailed report.
  We ping all websites a few times per minute.

%p
  %span#ping-count= ping_count.to_s
  requests completed since reboot.

%form#search-form{method: 'get', action: '/'}
  %fieldset
    %input{type: 'text', name: 'q', size: '35', placeholder: 'Search...', value: query}
    %button{type: 'submit'} Search
    %b= '&#128270;'

- if query
  - if found.empty?
    %p
      %b Nothing!
      Sorry about that.
  - else
    %p
      Found by
      ='"' + query + '":'
    - found.each do |e|
      %p
        =EpUri.new(e).to_html
        %span.right-if-mobile=EpBadge.new(e).to_html
        %br.mobile-only
        - if e.to_h.has_key?('flipped')
          =time_ago_in_words(e.to_h[:flipped]) + ' ago'

- if !flips.empty?
  %p
    Recent
    =flips.size
    flips:
  - flips.each do |e|
    %p
      =EpUri.new(e).to_html
      %span.right-if-mobile= EpBadge.new(e).to_html
      %br.mobile-only
      =time_ago_in_words(e.to_h[:flipped]) + ' ago'
:javascript
  $(document).ready(function poll_ping() {
    $.get('/ping_count', function(data) {
      $('#ping-count').text(data.ping_count);
      setTimeout(poll_ping, 1000);
    });
  });
